#!/bin/bash


# Check if the folder not exists
if [[ ! -d $PROJECTDIR ]]; then

	echo -e "${RED}Project doesn't exist.${RESET}"
	exit

fi




# Get data from sample.env file
source "$BUILDERDIR/sample.env"




# Get local.env in project folder, if exists
if [[ -f "$PROJECTDIR/local.env" ]]; then


	# Get data from .env file
	source "$PROJECTDIR/local.env"


fi




# Check if already installed
if [[ -f "$PROJECTDIR/.env" ]]; then


	# Get data from .env file
	source "$PROJECTDIR/.env"


	if [[ $IP != "127.0.0.1" ]]; then

		echo -e "${RED}Project is already installed.${RESET}"
		exit

	fi


fi




# Confirm the information
echo ""
echo ""
echo "== Site Info ============"
echo ""
echo "Local Development Domain: $DOMAIN"
echo "Project Directory: $PROJECTDIR"
echo ""
echo "Project Name: $SLUG"
echo "Short Name: $PREFIX"
echo "WP Version: $WP_VERSION"

if [[ $MODE == install-starter ]]; then
	echo "Website Name: $NAME"
	echo "Website Tagline: $DESC"
	[[ ! -z "$plugins" ]] && echo "Plugins: $plugins" || echo "Plugins: $PLUGINS"
	echo ""

	if [[ $DEVELOPER_EMAIL != webdesign@twelve12.com ]]; then
		echo "Developer Email: $DEVELOPER_EMAIL"
		echo "Developer Username: $DEVELOPER_USERNAME"
		echo "Developer First Name: $DEVELOPER_NAME"
		echo "Developer Last Name: $DEVELOPER_LAST_NAME"
		echo "Developer URL: $DEVELOPER_URL"
		echo ""
	else
		echo "Developer Email: $DEVELOPER_EMAIL"
		echo ""
	fi

fi

echo ""
echo "==================================="
echo ""
echo ""
read -ep "Are these correct? (type 'yes' to confirm): " confirm




# CHANGE THE FILE IF YES
if [[ $confirm == yes ]] || [[ $confirm == y ]]; then


	echo -e "${GREEN}Confirmed.${RESET}"


	# Move the 'wp-content' folder TEMPORARILY
	if [[ $MODE != install-starter ]]; then

		make_temporary

	fi


	# Update environment files
	update_environment


	# Get data from the new .env file
	source "$PROJECTDIR/.env"


	# Update the permissions
	permission_update $PROJECTDIR


else

	# If not confirmed, close the installation
	echo -e "${RED}Not confirmed.${RESET}"
	exit

fi




## INSTALLATION:

# CHECK THE LOCAL DOMAIN AVAILABILITY
echo "Checking '${DOMAIN}' availability..."
if grep -q "${DOMAIN}" /etc/hosts; then
	echo -e "${RED}'${DOMAIN}' Host has already been added. Please remove it before installing.${RESET}"
	exit
fi
echo -e "${GREEN}${DOMAIN}${RESET} - AVAILABLE"




# CHECK IP AND CREATE HOST
echo "Checking IP availability..."
COUNTER=2
while [[ $COUNTER -lt 120 ]]; do

	IP="127.0.0.${COUNTER}"


	echo "Checking '${IP}' availability..."
	if grep -q "${IP}" /etc/hosts; then
		echo "${IP} - NOT AVAILABLE"
	else

		if curl --max-time 3 --output /dev/null --silent --head --fail "${IP}"; then
			echo -e "${RED}${IP}${RESET} - NOT AVAILABLE"
		else
			echo -e "${GREEN}${IP}${RESET} - AVAILABLE"
			break
		fi

	fi


	let COUNTER=COUNTER+1

done

# Update the environment file (.env) with the available IP
sedreplace "s/IP=127.0.0.1/IP=${IP}/g" "${PROJECTDIR}/.env";
echo -e "'${IP}' changed as '${IP}' on .env file ... ${GREEN}done${RESET}"


# Open that IP slot
ifconfig lo0 alias $IP up
echo -e "'${IP}' is now available to build server ... ${GREEN}done${RESET}"




# BUILD THE SERVER
echo "Server is building..."
docker_compose rm &&
docker_compose pull &&
docker_compose build --no-cache &&
docker_compose up -d --force-recreate




# Install WP-CLI
echo -e "Installing WP-CLI..."
docker_compose exec wpcli wp-cli-install.sh
echo -e "Installing WP-CLI ... ${GREEN}done${RESET}"




# Add the host to the /etc/hosts file
sudo bash "$BUILDERDIR/config/etc-hosts.sh" -add $DOMAIN $IP
killall -HUP mDNSResponder




# Check MySQL to be ready
wait_for_mysql
INSTALLED="yes"




# Ask the registered URL and do the replacements
if [[ $MODE != install-starter ]]; then

	db_url_update

fi




# PREPARE THE STARTER TEMPLATE
if [[ $MODE == install-starter ]]; then


	# Download the template
	git clone https://github.com/Twelve12com/wp-flexible-starter-template.git "$PROJECTDIR/wp/wp-content/themes/${SLUG}"
	rm -rf "$PROJECTDIR/wp/wp-content/themes/${SLUG}/.git"
	echo -e "Starter theme clonned ... ${GREEN}done${RESET}"


	# Theme function prefix changes
	sedreplace "s/sitename/${PREFIX}/g" "$PROJECTDIR/wp/wp-content/themes/${SLUG}/functions.php";
	sedreplace "s/sitename/${PREFIX}/g" "$PROJECTDIR/wp/wp-content/themes/${SLUG}/header.php";
	echo -e "Function prefixes changed as '${PREFIX}_' ... ${GREEN}done${RESET}"


	# Theme info changes
	sedreplace "s/Site Name/${NAME}/g" "$PROJECTDIR/wp/wp-content/themes/${SLUG}/style.scss";
	sedreplace "s/Site tagline/${DESC}/g" "$PROJECTDIR/wp/wp-content/themes/${SLUG}/style.scss";
	echo -e "Theme information updated as '${NAME}' ... ${GREEN}done${RESET}"


	# Install NPM packages
	echo "NPM packages installing..."
	docker_compose run --no-deps --rm gulp npm run-script build
	echo -e "SCSS file built ... ${GREEN}done${RESET}"


	# DO THE WP WORKS
	source wp.sh


fi




# Update the temporary files
if [[ $MODE != install-starter ]]; then

	make_permanent

fi




# Save the initial DB backup
db_backup




# Ask for the git initialization
if [[ ! -d "${PROJECTDIR}/.git" ]]; then


	read -ep "Would you like to create new this project to Git? (Press 'enter' or type 'no'): " gitconfirm
	if [[ $gitconfirm != no ]]; then


		# Initiate git
		(

			# Open the site directory
			cd $PROJECTDIR
			echo -e "Open the site directory ... ${GREEN}done${RESET}"


			# Initiate Git
			git init
			echo -e "Initiate Git ... ${GREEN}done${RESET}"


			# Stage all the changes
			git add -A .
			echo -e "Stage all the changes ... ${GREEN}done${RESET}"


			# Show the git status
			git status
			echo -e "Show the git status ... ${GREEN}done${RESET}"


			# Commit the changes
			git commit -m "Initial commit"
			echo -e "Commit the changes ... ${GREEN}done${RESET}"


			echo 'Twelve12 Bitbucket Password:'
			read -s password  # -s flag hides password text

			read -ep "Would you like to retype the password? (Press 'enter' or type 'yes'): " retypepass
			if [[ $retypepass == "yes" ]]; then

				echo 'Twelve12 Bitbucket Password:'
				read -s password  # -s flag hides password text

			fi


			# Create a private repo
			curl POST -v -u twelve12com:$password  -H "Content-Type: application/json" \
		https://api.bitbucket.org/2.0/repositories/twelve12com/$SLUG \
		-d '{"scm": "git", "is_private": "true", "fork_policy": "no_public_forks" }'
			echo ""
			echo -e "Create a private repo ... ${GREEN}done${RESET}"


			# Add the origin
			git remote add origin https://twelve12com@bitbucket.org/twelve12com/$SLUG.git
			echo -e "Add the origin ... ${GREEN}done${RESET}"


			# Push the changes
			git push -u origin --all
			echo -e "Push the files ... ${GREEN}done${RESET}"


			# Update .git permissions
			permission_update .git

		)


	fi

fi




# Fix the site git permissions
if [[ -d "${PROJECTDIR}/.git" ]]; then
	
	git_permission_update "${PROJECTDIR}/.git"

fi




# PRINT THE SITE INFO
echo -e "${GREEN}Project Installed${RESET}"
echo ""
echo ""
echo "== Site Info ===================="
echo ""
echo "Site URL: http://${DOMAIN}"
echo "Admin Page: http://${DOMAIN}/wp-admin"

if [[ $MODE == install-starter ]]; then

	echo "Username: ${ADMIN_USERNAME}"
	echo "${ADMIN_ONLY_PASSWORD}"

fi

echo "IP: ${IP}"
echo ""
echo "================================="
echo ""
echo ""




echo -e "Installing '${SLUG}' project ... ${GREEN}done${RESET}"
