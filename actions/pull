#!/bin/bash




# Check if the folder not exists
if [[ ! -d "$PROJECTDIR" ]]; then

	echo -e "${RED}Project doesn't exist.${RESET}"
	exit

fi




# Hard pull confirmation
if [[ $OPTION1 == --hard ]]; then

	read -ep "Are you sure you want to get latest changes from Git? This will replace all the changes you might have done. (yes | no): " confirm

fi


# Import confirmation
if [[ $OPTION1 == --import ]]; then

	read -ep "Are you sure you want to replace all the changes you might have done? (yes | no): " confirm

fi




if [[ $OPTION1 == --hard ]] || [[ $OPTION1 == --import ]]; then


	# Confirmation check
	if [[ $confirm != "yes" ]] && [[ $confirm != "y" ]]; then

		echo -e "${RED}Not confirmed.${RESET}"
		exit

	fi


	# Create the current DB backup
	if [[ -d "$PROJECTDIR/database/mysql" ]]; then

		db_backup

	fi

fi




# DETECT DB CHANGES
DB_FILE="$PROJECTDIR/database/dump/wordpress_data.sql"
DB_SUM1=$(md5 -r "$DB_FILE")




if [[ $OPTION1 == --import ]]; then


	# Move import files
	move_import_files


else


	# Pulling latest changes from git
	if [[ -d "$PROJECTDIR/.git" ]]; then


		(
			cd "$PROJECTDIR"

			if [[ $OPTION1 == --hard ]]; then


				echo "Hard reset..."
				sudo git fetch
				sudo git reset --hard origin/master

				if [[ $INSTALLED != "yes" ]]; then
					sudo git clean -dfx
				else
					sudo git clean -df
				fi

				echo -e "Hard reset ... ${GREEN}done${RESET}"


			fi


			echo "Checking the latest remote changes..."
			if sudo git pull;then

				echo -e "Git pull ... ${GREEN}done${RESET}"

			else

				echo -e "Git pull ... ${RED}not done${RESET}"
			
			fi
		)


	fi


fi




# DETECT DB CHANGES
DB_SUM2=$(md5 -r "$DB_FILE")
if [[ $DB_SUM1 != $DB_SUM2 ]]; then


	echo -e "${BLUE}DB changed${RESET}"


	# If installed
	if [[ $INSTALLED == "yes" ]] && [[ $CONTAINEREXISTS == "yes" ]]; then


		#Â If not hard pull, confirm before changing DB
		if [[ -z $OPTION1 ]]; then


			read -ep "DB has been changed by the last commit. Would you like to continue replacing your local site data with the new one? (yes | no): " confirm
			if [[ $confirm == no ]] || [[  $confirm == n ]]; then

				echo -e "${BLUE}Pulling complete without replacing the DB${RESET}"
				exit

			fi


		fi


		# Import the DB
		db_import "$PROJECTDIR/database/dump/wordpress_data.sql"


		# Ask the registered URL and do the replacements
		db_url_update


		# Rewrite Flush
		wp rewrite flush --hard


	else


		printf "Old data removing ..."
		sudo rm -rf "$PROJECTDIR/database/mysql"
		echo -e " ${GREEN}done${RESET}"


		echo -e "${GREEN}Server needs to be installed to apply DB changes.${RESET}"


	fi


else

	echo -e "${BLUE}DB is identical.${RESET}"

fi




# Permission fix needed
permission_update "$PROJECTDIR"