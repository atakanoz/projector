#!/bin/bash




# Check if the folder not exists
if [[ ! -d $PROJECTDIR ]]; then

	echo -e "${RED}Project doesn't exist.${RESET}"
	exit

fi




# Confirmations
if [[ $2 == --hard ]] || [[ $3 == --hard ]] || [[ $2 == --import ]] || [[ $3 == --import ]]; then


	# Hard pull confirmation
	if [[ $2 == --hard ]] || [[ $3 == --hard ]]; then


		read -ep "Are you sure you want to get latest changes from Git? This will replace all the changes you might have done. (yes | no): " ACTION
		if [[ $ACTION != "yes" ]] && [[ $ACTION != "y" ]]; then

			echo -e "${RED}Not confirmed.${RESET}"
			exit

		fi


	fi


	# Import confirmation
	if [[ $2 == --import ]] || [[ $3 == --import ]]; then


		read -ep "Are you sure you want to replace all the changes you might have done? (yes | no): " ACTION
		if [[ $ACTION != "yes" ]] && [[ $ACTION != "y" ]]; then

			echo -e "${RED}Not confirmed.${RESET}"
			exit

		fi


	fi


	# Create the current backup
	if [[ $INSTALLED == "yes" ]]; then

		db_backup

	fi


fi




# PULL HARD - GET DB BACKUP TO DETECT DB CHANGES
DB_FILE="$PROJECTDIR/database/dump/wordpress_data.sql"
DB_SUM1=$(md5 -r $DB_FILE)




if [[ $2 == --import ]] || [[ $3 == --import ]]; then


	# Move import files
	move_import_files


else


	# Pulling latest changes from git
	if [[ -d "$PROJECTDIR/.git" ]]; then

		(
			cd $PROJECTDIR
			echo "Checking the latest remote changes..."
			if [[ $2 == --hard ]] || [[ $3 == --hard ]]; then
				echo "Hard reset..."
				git fetch
				git reset --hard origin/master
				git clean -dfx
				echo -e "Hard reset ... ${GREEN}done${RESET}"
			fi
			git pull
			echo -e "Git pull ... ${GREEN}done${RESET}"
		)

	fi


fi




# DETECT DB CHANGES
DB_SUM2=$(md5 -r $DB_FILE)
if [[ $DB_SUM1 != $DB_SUM2 ]]; then


	echo "DB changed."


	# If installed
	if [[ $INSTALLED == "yes" ]]; then


		# Move to the WP area
		cp "${PROJECTDIR}/database/dump/wordpress_data.sql" "${PROJECTDIR}/wp/wordpress_data.sql"


		# Delete all the tables
		echo "Resetting DB..."
		wp db reset --yes


		# Import the DB
		echo "Importing DB..."
		wp db import "wordpress_data.sql"


		# Delete the file from WP area
		rm -rf "${PROJECTDIR}/wp/wordpress_data.sql"


		# Ask the registered URL and do the replacements
		db_url_update


		# Rewrite Flush
		wp rewrite flush --hard


	else

		echo "Old data removing..."
		rm -rf "${PROJECTDIR}/database/mysql/"
		echo -e "Remove old data ... ${GREEN}done${RESET}"


		echo -e "${GREEN}Server needs to be restarted to apply DB changes.${RESET}"

	fi


else


	echo "DB is identical."


fi




# Permission fix needed
if [[ $2 == --hard ]] || [[ $3 == --hard ]] || [[ $2 == --import ]] || [[ $3 == --import ]]; then

	git_permission_update "$PROJECTDIR/.git"
	permission_update "$PROJECTDIR/"

fi




echo -e "${GREEN}PULLING COMPLETE${RESET}"